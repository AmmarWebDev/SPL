"use strict";const topPlayersSection=document.getElementById("top-players");document.querySelector('.navbar-collapse a[href="index.html"]').classList.toggle("active"),document.querySelector('.navbar-collapse a[href="top-players.html"]').classList.toggle("active");const csvFiles=["database/spl-cwc-records.csv","database/spl-euros-records.csv"];Promise.all(csvFiles.map((s=>axios.get(s)))).then((s=>{s.forEach(((t,e)=>{const a=Papa.parse(t.data,{header:!0,skipEmptyLines:!0}).data,o=csvFiles[e].match(/spl-(.*?)-records/i),n=o?o[1].toUpperCase():"Unknown League",r=document.createElement("h1");r.className="text-center mt-5",r.innerHTML=`\n        <img src="assets/images/${n.toLowerCase()}-logo.png" width="40" />\n        <span>SPL ${n}</span>\n        <img src="assets/images/${n.toLowerCase()}-logo.png" width="40" />\n      `,topPlayersSection.appendChild(r);const l=a.map((s=>({Username:s.Username,Goals:parseInt(s.Goals,10)||0,Assists:parseInt(s.Assists,10)||0}))),i=[...l].sort(((s,t)=>t.Goals-s.Goals||t.Assists-s.Assists)).slice(0,10),c=[...l].sort(((s,t)=>t.Assists-s.Assists||t.Goals-s.Goals)).slice(0,10),d=`\n        <h2 class="text-light text-center responsive-text">\n          🏆 Top 10 ${n} Goalscorers 🏆\n        </h2>\n        <table class="table table-striped table-bordered table-hover text-center w-100 my-3 mx-auto" style="max-width: 500px">\n          <thead><tr><th>Username</th><th>Goals</th></tr></thead>\n          <tbody>\n            ${i.map((s=>`\n              <tr>\n                <td>${s.Username}</td>\n                <td>${s.Goals}</td>\n              </tr>\n            `)).join("")}\n          </tbody>\n        </table>\n      `,p=`\n        <h2 class="text-light text-center responsive-text">\n          🏆 Top 10 ${n} Assisters 🏆\n        </h2>\n        <table class="table table-striped table-bordered table-hover text-center w-100 my-3 mx-auto" style="max-width: 500px">\n          <thead><tr><th>Username</th><th>Assists</th></tr></thead>\n          <tbody>\n            ${c.map((s=>`\n              <tr>\n                <td>${s.Username}</td>\n                <td>${s.Assists}</td>\n              </tr>\n            `)).join("")}\n          </tbody>\n        </table>\n      `;topPlayersSection.insertAdjacentHTML("beforeend",`\n        <div class="row">\n          <div class="col-12 col-lg-6">${d}</div>\n          <div class="col-12 col-lg-6">${p}</div>\n        </div>\n      `);const m={};a.forEach((s=>{const t=s["User ID"]?.trim()?`<@${s["User ID"].trim()}>`:`@${s.Username}`,e=s["Team Emoji"]||"",a=t+"||"+e;m[a]||(m[a]={id:t,emoji:e,Goals:0,Assists:0}),m[a].Goals+=parseInt(s.Goals,10)||0,m[a].Assists+=parseInt(s.Assists,10)||0}));const h=Object.values(m),b=[...h].sort(((s,t)=>t.Goals-s.Goals||t.Assists-s.Assists)).slice(0,10),y=[...h].sort(((s,t)=>t.Assists-s.Assists||t.Goals-s.Goals)).slice(0,10),$=[];$.push(`# SPL ${n} Top 10 Scorers Till Now:`),b.forEach(((s,t)=>{if(s.Goals>0){const e=1===s.Goals?"goal":"goals";$.push(`### ${t+1}. ${s.id} ${s.emoji}: ${s.Goals} ${e}`)}})),$.push(`\n# SPL ${n} Top 10 Assistors Till Now:`),y.forEach(((s,t)=>{if(s.Assists>0){const e=1===s.Assists?"assist":"assists";$.push(`### ${t+1}. ${s.id} ${s.emoji}: ${s.Assists} ${e}`)}}));const g=document.createElement("button");g.className="btn btn-primary my-4 d-block mx-auto",g.textContent=`📋 Copy SPL ${n} Summary`,g.addEventListener("click",(()=>{navigator.clipboard.writeText($.join("\n")).then((()=>{g.textContent="✅ Copied!",setTimeout((()=>{g.textContent=`📋 Copy SPL ${n} Summary`}),2e3)})).catch((s=>{console.error("Copy failed",s),g.textContent="❌ Failed to Copy"}))})),topPlayersSection.appendChild(g),e<s.length-1&&topPlayersSection.insertAdjacentHTML("beforeend",'<hr class="border-white border-2 opacity-100" style="margin:70px 0;" />')}))})).catch((s=>console.error("Error loading CSVs:",s)));