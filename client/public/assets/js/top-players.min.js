"use strict";const topPlayersSection=document.getElementById("top-players");function openConfirmResultModal(){const s=document.getElementById("add-result-modal"),t=document.getElementById("confirm-result-modal"),e=bootstrap.Modal.getInstance(s),o=new bootstrap.Modal(t),a=document.getElementById("league-name").value,r=document.getElementById("match-result").value.trim();try{const t=r.split("\n").map((s=>s.trim())).filter(Boolean),n={scorers:[],cards:[],goalkeepers:[]},l=`(?:${/(?::[\w]+:|<:[\w]+:\d+>)/.source})?\\s*`;if(!t[0].startsWith("# "))throw new Error("Missing header");const i=t[0].replace(/^# /,"").trim(),c=i.lastIndexOf(" ");if(-1===c)throw new Error("Invalid header format");n.competition=i.slice(0,c).trim(),n.stage=i.slice(c+1).toLowerCase().replace(/\s+/g,"-");const d=t[1],m=new RegExp(`^#\\s*${l}<@&(\\d+)>\\s+(\\d+)\\s*-\\s*(\\d+)\\s+<@&(\\d+)>\\s*${l}$`),h=d.match(m);if(!h)throw new Error("Invalid match line");n.teamA={roleId:h[1],score:parseInt(h[2])},n.teamB={roleId:h[4],score:parseInt(h[3])};let p=2;if(t[p]&&t[p].startsWith("# REF:")){const s=t[p].match(/^# REF:\s*<@(\d+)>/);s&&(n.referee=s[1]),p++}if(!t[p]||!t[p].startsWith("# STATS:"))throw new Error("Missing # STATS:");for(p++;p<t.length&&!t[p].startsWith("#");){const s=t[p].match(new RegExp(`^${l}<@&(\\d+)>\\s+<@(\\d+)>:\\s*(\\d+) goal[s]?[,\\s]*(\\d+)? assist[s]?$`));s&&n.scorers.push({teamRoleId:s[1],userId:s[2],goals:parseInt(s[3]),assists:s[4]?parseInt(s[4]):0}),p++}if(t[p]&&t[p].startsWith("# Cards:"))for(p++;p<t.length&&!t[p].startsWith("#");){const s=t[p].match(new RegExp(`^${l}<@&(\\d+)>\\s+<@(\\d+)>\\s+(üü®|üü•)$`));s&&n.cards.push({teamRoleId:s[1],userId:s[2],card:s[3]}),p++}if(!t[p]||!t[p].startsWith("# Goalkeepers:"))throw new Error("Missing # Goalkeepers:");for(p++;p<t.length&&!t[p].startsWith("#");){const s=t[p].match(new RegExp(`^${l}<@&(\\d+)>\\s+<@(\\d+)>$`));s&&n.goalkeepers.push({teamRoleId:s[1],userId:s[2]}),p++}if(!t[p]||!t[p].startsWith("# MOTM:"))throw new Error("Missing # MOTM:");const g=t[p].match(/^# MOTM:\s*<@(\d+)>/);if(!g)throw new Error("Invalid MOTM format");n.motm=g[1],console.log(n),document.getElementById("confirm-result-modal-body").innerHTML=`You are going to post a new result to ${a}`,e?(s.addEventListener("hidden.bs.modal",(()=>{o.show()}),{once:!0}),e.hide()):o.show()}catch(s){console.log("invalid template:",s.message)}}document.querySelector('.navbar-collapse a[href="index.html"]').classList.toggle("active"),document.querySelector('.navbar-collapse a[href="top-players.html"]').classList.toggle("active");const csvFiles=["database/spl-cwc-records.csv","database/spl-euros-records.csv"];Promise.all(csvFiles.map((s=>axios.get(s)))).then((s=>{s.forEach(((t,e)=>{const o=Papa.parse(t.data,{header:!0,skipEmptyLines:!0}).data,a=csvFiles[e].match(/spl-(.*?)-records/i),r=a?a[1].toUpperCase():"Unknown League",n=document.createElement("h1");n.className="text-center mt-5",n.innerHTML=`\n        <img src="assets/images/${r.toLowerCase()}-logo.png" width="40" />\n        <span>SPL ${r}</span>\n        <img src="assets/images/${r.toLowerCase()}-logo.png" width="40" />\n      `,topPlayersSection.appendChild(n);const l=o.map((s=>({Username:s.Username,Goals:parseInt(s.Goals,10)||0,Assists:parseInt(s.Assists,10)||0}))),i=[...l].sort(((s,t)=>t.Goals-s.Goals||t.Assists-s.Assists)).slice(0,10),c=[...l].sort(((s,t)=>t.Assists-s.Assists||t.Goals-s.Goals)).slice(0,10),d=`\n        <h2 class="text-light text-center responsive-text">\n          üèÜ Top 10 ${r} Goalscorers üèÜ\n        </h2>\n        <table class="table table-striped table-bordered table-hover text-center w-100 my-3 mx-auto" style="max-width: 500px">\n          <thead><tr><th>Username</th><th>Goals</th></tr></thead>\n          <tbody>\n            ${i.map((s=>`\n              <tr>\n                <td>${s.Username}</td>\n                <td>${s.Goals}</td>\n              </tr>\n            `)).join("")}\n          </tbody>\n        </table>\n      `,m=`\n        <h2 class="text-light text-center responsive-text">\n          üèÜ Top 10 ${r} Assisters üèÜ\n        </h2>\n        <table class="table table-striped table-bordered table-hover text-center w-100 my-3 mx-auto" style="max-width: 500px">\n          <thead><tr><th>Username</th><th>Assists</th></tr></thead>\n          <tbody>\n            ${c.map((s=>`\n              <tr>\n                <td>${s.Username}</td>\n                <td>${s.Assists}</td>\n              </tr>\n            `)).join("")}\n          </tbody>\n        </table>\n      `;topPlayersSection.insertAdjacentHTML("beforeend",`\n        <div class="row">\n          <div class="col-12 col-lg-6">${d}</div>\n          <div class="col-12 col-lg-6">${m}</div>\n        </div>\n      `);const h={};o.forEach((s=>{const t=s["User ID"]?.trim()?`<@${s["User ID"].trim()}>`:`@${s.Username}`,e=s["Team Emoji"]||"",o=t+"||"+e;h[o]||(h[o]={id:t,emoji:e,Goals:0,Assists:0}),h[o].Goals+=parseInt(s.Goals,10)||0,h[o].Assists+=parseInt(s.Assists,10)||0}));const p=Object.values(h),g=[...p].sort(((s,t)=>t.Goals-s.Goals||t.Assists-s.Assists)).slice(0,10),u=[...p].sort(((s,t)=>t.Assists-s.Assists||t.Goals-s.Goals)).slice(0,10),w=[];w.push(`# SPL ${r} Top 10 Scorers Till Now:`),g.forEach(((s,t)=>{if(s.Goals>0){const e=1===s.Goals?"goal":"goals";w.push(`### ${t+1}. ${s.id} ${s.emoji}: ${s.Goals} ${e}`)}})),w.push(`\n# SPL ${r} Top 10 Assistors Till Now:`),u.forEach(((s,t)=>{if(s.Assists>0){const e=1===s.Assists?"assist":"assists";w.push(`### ${t+1}. ${s.id} ${s.emoji}: ${s.Assists} ${e}`)}}));const $=document.createElement("button");$.className="btn btn-primary my-4 d-block mx-auto",$.textContent=`üìã Copy SPL ${r} Summary`,$.addEventListener("click",(()=>{navigator.clipboard.writeText(w.join("\n")).then((()=>{$.textContent="‚úÖ Copied!",setTimeout((()=>{$.textContent=`üìã Copy SPL ${r} Summary`}),2e3)})).catch((s=>{console.error("Copy failed",s),$.textContent="‚ùå Failed to Copy"}))})),topPlayersSection.appendChild($),e<s.length-1&&topPlayersSection.insertAdjacentHTML("beforeend",'<hr class="border-white border-2 opacity-100" style="margin:70px 0;" />')}))})).catch((s=>console.error("Error loading CSVs:",s)));